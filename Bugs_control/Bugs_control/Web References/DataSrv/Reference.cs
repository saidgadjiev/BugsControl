//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.17929
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Bugs_control.DataSrv {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBranchListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReasonAppealListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTypeErrorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPriorityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubSystemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFormsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSectionFormsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTypeAppealListOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewAtachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback createActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEndActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAtachmentsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAtachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActionListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::Bugs_control.Properties.Settings.Default.Bugs_control_DataSrv_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event getBranchListCompletedEventHandler getBranchListCompleted;
        
        /// <remarks/>
        public event getReasonAppealListCompletedEventHandler getReasonAppealListCompleted;
        
        /// <remarks/>
        public event getTypeErrorListCompletedEventHandler getTypeErrorListCompleted;
        
        /// <remarks/>
        public event getPriorityListCompletedEventHandler getPriorityListCompleted;
        
        /// <remarks/>
        public event getStatusListCompletedEventHandler getStatusListCompleted;
        
        /// <remarks/>
        public event getSystemListCompletedEventHandler getSystemListCompleted;
        
        /// <remarks/>
        public event getSubSystemListCompletedEventHandler getSubSystemListCompleted;
        
        /// <remarks/>
        public event getFormsListCompletedEventHandler getFormsListCompleted;
        
        /// <remarks/>
        public event getSectionFormsListCompletedEventHandler getSectionFormsListCompleted;
        
        /// <remarks/>
        public event getTypeAppealListCompletedEventHandler getTypeAppealListCompleted;
        
        /// <remarks/>
        public event createNewTaskCompletedEventHandler createNewTaskCompleted;
        
        /// <remarks/>
        public event createNewAtachmentsCompletedEventHandler createNewAtachmentsCompleted;
        
        /// <remarks/>
        public event searchDataCompletedEventHandler searchDataCompleted;
        
        /// <remarks/>
        public event createActionCompletedEventHandler createActionCompleted;
        
        /// <remarks/>
        public event getUserListCompletedEventHandler getUserListCompleted;
        
        /// <remarks/>
        public event getEndActionCompletedEventHandler getEndActionCompleted;
        
        /// <remarks/>
        public event getAtachmentsListCompletedEventHandler getAtachmentsListCompleted;
        
        /// <remarks/>
        public event deleteAtachmentCompletedEventHandler deleteAtachmentCompleted;
        
        /// <remarks/>
        public event getActionListCompletedEventHandler getActionListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBranchList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getBranchList(out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getBranchList", new object[0]);
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getBranchListAsync() {
            this.getBranchListAsync(null);
        }
        
        /// <remarks/>
        public void getBranchListAsync(object userState) {
            if ((this.getBranchListOperationCompleted == null)) {
                this.getBranchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBranchListOperationCompleted);
            }
            this.InvokeAsync("getBranchList", new object[0], this.getBranchListOperationCompleted, userState);
        }
        
        private void OngetBranchListOperationCompleted(object arg) {
            if ((this.getBranchListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBranchListCompleted(this, new getBranchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReasonAppealList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getReasonAppealList(out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getReasonAppealList", new object[0]);
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getReasonAppealListAsync() {
            this.getReasonAppealListAsync(null);
        }
        
        /// <remarks/>
        public void getReasonAppealListAsync(object userState) {
            if ((this.getReasonAppealListOperationCompleted == null)) {
                this.getReasonAppealListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReasonAppealListOperationCompleted);
            }
            this.InvokeAsync("getReasonAppealList", new object[0], this.getReasonAppealListOperationCompleted, userState);
        }
        
        private void OngetReasonAppealListOperationCompleted(object arg) {
            if ((this.getReasonAppealListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReasonAppealListCompleted(this, new getReasonAppealListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTypeErrorList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getTypeErrorList(out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getTypeErrorList", new object[0]);
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getTypeErrorListAsync() {
            this.getTypeErrorListAsync(null);
        }
        
        /// <remarks/>
        public void getTypeErrorListAsync(object userState) {
            if ((this.getTypeErrorListOperationCompleted == null)) {
                this.getTypeErrorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTypeErrorListOperationCompleted);
            }
            this.InvokeAsync("getTypeErrorList", new object[0], this.getTypeErrorListOperationCompleted, userState);
        }
        
        private void OngetTypeErrorListOperationCompleted(object arg) {
            if ((this.getTypeErrorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTypeErrorListCompleted(this, new getTypeErrorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPriorityList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getPriorityList(out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getPriorityList", new object[0]);
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getPriorityListAsync() {
            this.getPriorityListAsync(null);
        }
        
        /// <remarks/>
        public void getPriorityListAsync(object userState) {
            if ((this.getPriorityListOperationCompleted == null)) {
                this.getPriorityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPriorityListOperationCompleted);
            }
            this.InvokeAsync("getPriorityList", new object[0], this.getPriorityListOperationCompleted, userState);
        }
        
        private void OngetPriorityListOperationCompleted(object arg) {
            if ((this.getPriorityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPriorityListCompleted(this, new getPriorityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getStatusList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getStatusList(out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getStatusList", new object[0]);
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getStatusListAsync() {
            this.getStatusListAsync(null);
        }
        
        /// <remarks/>
        public void getStatusListAsync(object userState) {
            if ((this.getStatusListOperationCompleted == null)) {
                this.getStatusListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusListOperationCompleted);
            }
            this.InvokeAsync("getStatusList", new object[0], this.getStatusListOperationCompleted, userState);
        }
        
        private void OngetStatusListOperationCompleted(object arg) {
            if ((this.getStatusListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusListCompleted(this, new getStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSystemList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getSystemList(out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getSystemList", new object[0]);
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getSystemListAsync() {
            this.getSystemListAsync(null);
        }
        
        /// <remarks/>
        public void getSystemListAsync(object userState) {
            if ((this.getSystemListOperationCompleted == null)) {
                this.getSystemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemListOperationCompleted);
            }
            this.InvokeAsync("getSystemList", new object[0], this.getSystemListOperationCompleted, userState);
        }
        
        private void OngetSystemListOperationCompleted(object arg) {
            if ((this.getSystemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemListCompleted(this, new getSystemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSubSystemList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getSubSystemList(string system_name, out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getSubSystemList", new object[] {
                        system_name});
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getSubSystemListAsync(string system_name) {
            this.getSubSystemListAsync(system_name, null);
        }
        
        /// <remarks/>
        public void getSubSystemListAsync(string system_name, object userState) {
            if ((this.getSubSystemListOperationCompleted == null)) {
                this.getSubSystemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubSystemListOperationCompleted);
            }
            this.InvokeAsync("getSubSystemList", new object[] {
                        system_name}, this.getSubSystemListOperationCompleted, userState);
        }
        
        private void OngetSubSystemListOperationCompleted(object arg) {
            if ((this.getSubSystemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubSystemListCompleted(this, new getSubSystemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFormsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getFormsList(string subsystem_name, out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getFormsList", new object[] {
                        subsystem_name});
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getFormsListAsync(string subsystem_name) {
            this.getFormsListAsync(subsystem_name, null);
        }
        
        /// <remarks/>
        public void getFormsListAsync(string subsystem_name, object userState) {
            if ((this.getFormsListOperationCompleted == null)) {
                this.getFormsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFormsListOperationCompleted);
            }
            this.InvokeAsync("getFormsList", new object[] {
                        subsystem_name}, this.getFormsListOperationCompleted, userState);
        }
        
        private void OngetFormsListOperationCompleted(object arg) {
            if ((this.getFormsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFormsListCompleted(this, new getFormsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSectionFormsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getSectionFormsList(string forms_name, out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getSectionFormsList", new object[] {
                        forms_name});
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getSectionFormsListAsync(string forms_name) {
            this.getSectionFormsListAsync(forms_name, null);
        }
        
        /// <remarks/>
        public void getSectionFormsListAsync(string forms_name, object userState) {
            if ((this.getSectionFormsListOperationCompleted == null)) {
                this.getSectionFormsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSectionFormsListOperationCompleted);
            }
            this.InvokeAsync("getSectionFormsList", new object[] {
                        forms_name}, this.getSectionFormsListOperationCompleted, userState);
        }
        
        private void OngetSectionFormsListOperationCompleted(object arg) {
            if ((this.getSectionFormsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSectionFormsListCompleted(this, new getSectionFormsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTypeAppealList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getTypeAppealList(out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getTypeAppealList", new object[0]);
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getTypeAppealListAsync() {
            this.getTypeAppealListAsync(null);
        }
        
        /// <remarks/>
        public void getTypeAppealListAsync(object userState) {
            if ((this.getTypeAppealListOperationCompleted == null)) {
                this.getTypeAppealListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTypeAppealListOperationCompleted);
            }
            this.InvokeAsync("getTypeAppealList", new object[0], this.getTypeAppealListOperationCompleted, userState);
        }
        
        private void OngetTypeAppealListOperationCompleted(object arg) {
            if ((this.getTypeAppealListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTypeAppealListCompleted(this, new getTypeAppealListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createNewTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createNewTask(int[] intItems, string[] stringItems) {
            object[] results = this.Invoke("createNewTask", new object[] {
                        intItems,
                        stringItems});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createNewTaskAsync(int[] intItems, string[] stringItems) {
            this.createNewTaskAsync(intItems, stringItems, null);
        }
        
        /// <remarks/>
        public void createNewTaskAsync(int[] intItems, string[] stringItems, object userState) {
            if ((this.createNewTaskOperationCompleted == null)) {
                this.createNewTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewTaskOperationCompleted);
            }
            this.InvokeAsync("createNewTask", new object[] {
                        intItems,
                        stringItems}, this.createNewTaskOperationCompleted, userState);
        }
        
        private void OncreateNewTaskOperationCompleted(object arg) {
            if ((this.createNewTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewTaskCompleted(this, new createNewTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createNewAtachments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createNewAtachments(string fileName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] file, string data) {
            object[] results = this.Invoke("createNewAtachments", new object[] {
                        fileName,
                        file,
                        data});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createNewAtachmentsAsync(string fileName, byte[] file, string data) {
            this.createNewAtachmentsAsync(fileName, file, data, null);
        }
        
        /// <remarks/>
        public void createNewAtachmentsAsync(string fileName, byte[] file, string data, object userState) {
            if ((this.createNewAtachmentsOperationCompleted == null)) {
                this.createNewAtachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewAtachmentsOperationCompleted);
            }
            this.InvokeAsync("createNewAtachments", new object[] {
                        fileName,
                        file,
                        data}, this.createNewAtachmentsOperationCompleted, userState);
        }
        
        private void OncreateNewAtachmentsOperationCompleted(object arg) {
            if ((this.createNewAtachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewAtachmentsCompleted(this, new createNewAtachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/searchData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool searchData(string date1, string date2, int[] items, out System.Data.DataSet loadData) {
            object[] results = this.Invoke("searchData", new object[] {
                        date1,
                        date2,
                        items});
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void searchDataAsync(string date1, string date2, int[] items) {
            this.searchDataAsync(date1, date2, items, null);
        }
        
        /// <remarks/>
        public void searchDataAsync(string date1, string date2, int[] items, object userState) {
            if ((this.searchDataOperationCompleted == null)) {
                this.searchDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchDataOperationCompleted);
            }
            this.InvokeAsync("searchData", new object[] {
                        date1,
                        date2,
                        items}, this.searchDataOperationCompleted, userState);
        }
        
        private void OnsearchDataOperationCompleted(object arg) {
            if ((this.searchDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchDataCompleted(this, new searchDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createAction(string[] stringItems, int[] intItems) {
            object[] results = this.Invoke("createAction", new object[] {
                        stringItems,
                        intItems});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createActionAsync(string[] stringItems, int[] intItems) {
            this.createActionAsync(stringItems, intItems, null);
        }
        
        /// <remarks/>
        public void createActionAsync(string[] stringItems, int[] intItems, object userState) {
            if ((this.createActionOperationCompleted == null)) {
                this.createActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateActionOperationCompleted);
            }
            this.InvokeAsync("createAction", new object[] {
                        stringItems,
                        intItems}, this.createActionOperationCompleted, userState);
        }
        
        private void OncreateActionOperationCompleted(object arg) {
            if ((this.createActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createActionCompleted(this, new createActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getUserList(out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getUserList", new object[0]);
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getUserListAsync() {
            this.getUserListAsync(null);
        }
        
        /// <remarks/>
        public void getUserListAsync(object userState) {
            if ((this.getUserListOperationCompleted == null)) {
                this.getUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserListOperationCompleted);
            }
            this.InvokeAsync("getUserList", new object[0], this.getUserListOperationCompleted, userState);
        }
        
        private void OngetUserListOperationCompleted(object arg) {
            if ((this.getUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserListCompleted(this, new getUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getEndAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getEndAction(int id, out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getEndAction", new object[] {
                        id});
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getEndActionAsync(int id) {
            this.getEndActionAsync(id, null);
        }
        
        /// <remarks/>
        public void getEndActionAsync(int id, object userState) {
            if ((this.getEndActionOperationCompleted == null)) {
                this.getEndActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEndActionOperationCompleted);
            }
            this.InvokeAsync("getEndAction", new object[] {
                        id}, this.getEndActionOperationCompleted, userState);
        }
        
        private void OngetEndActionOperationCompleted(object arg) {
            if ((this.getEndActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEndActionCompleted(this, new getEndActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAtachmentsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getAtachmentsList(int id, out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getAtachmentsList", new object[] {
                        id});
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getAtachmentsListAsync(int id) {
            this.getAtachmentsListAsync(id, null);
        }
        
        /// <remarks/>
        public void getAtachmentsListAsync(int id, object userState) {
            if ((this.getAtachmentsListOperationCompleted == null)) {
                this.getAtachmentsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAtachmentsListOperationCompleted);
            }
            this.InvokeAsync("getAtachmentsList", new object[] {
                        id}, this.getAtachmentsListOperationCompleted, userState);
        }
        
        private void OngetAtachmentsListOperationCompleted(object arg) {
            if ((this.getAtachmentsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAtachmentsListCompleted(this, new getAtachmentsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAtachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteAtachment(int id, string filename) {
            this.Invoke("deleteAtachment", new object[] {
                        id,
                        filename});
        }
        
        /// <remarks/>
        public void deleteAtachmentAsync(int id, string filename) {
            this.deleteAtachmentAsync(id, filename, null);
        }
        
        /// <remarks/>
        public void deleteAtachmentAsync(int id, string filename, object userState) {
            if ((this.deleteAtachmentOperationCompleted == null)) {
                this.deleteAtachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAtachmentOperationCompleted);
            }
            this.InvokeAsync("deleteAtachment", new object[] {
                        id,
                        filename}, this.deleteAtachmentOperationCompleted, userState);
        }
        
        private void OndeleteAtachmentOperationCompleted(object arg) {
            if ((this.deleteAtachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAtachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getActionList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getActionList(int id, out System.Data.DataSet loadData) {
            object[] results = this.Invoke("getActionList", new object[] {
                        id});
            loadData = ((System.Data.DataSet)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getActionListAsync(int id) {
            this.getActionListAsync(id, null);
        }
        
        /// <remarks/>
        public void getActionListAsync(int id, object userState) {
            if ((this.getActionListOperationCompleted == null)) {
                this.getActionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActionListOperationCompleted);
            }
            this.InvokeAsync("getActionList", new object[] {
                        id}, this.getActionListOperationCompleted, userState);
        }
        
        private void OngetActionListOperationCompleted(object arg) {
            if ((this.getActionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActionListCompleted(this, new getActionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getBranchListCompletedEventHandler(object sender, getBranchListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBranchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBranchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getReasonAppealListCompletedEventHandler(object sender, getReasonAppealListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReasonAppealListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReasonAppealListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getTypeErrorListCompletedEventHandler(object sender, getTypeErrorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTypeErrorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTypeErrorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getPriorityListCompletedEventHandler(object sender, getPriorityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPriorityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPriorityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getStatusListCompletedEventHandler(object sender, getStatusListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getSystemListCompletedEventHandler(object sender, getSystemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getSubSystemListCompletedEventHandler(object sender, getSubSystemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubSystemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubSystemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getFormsListCompletedEventHandler(object sender, getFormsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFormsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFormsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getSectionFormsListCompletedEventHandler(object sender, getSectionFormsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSectionFormsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSectionFormsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getTypeAppealListCompletedEventHandler(object sender, getTypeAppealListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTypeAppealListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTypeAppealListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void createNewTaskCompletedEventHandler(object sender, createNewTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void createNewAtachmentsCompletedEventHandler(object sender, createNewAtachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewAtachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewAtachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void searchDataCompletedEventHandler(object sender, searchDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void createActionCompletedEventHandler(object sender, createActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getUserListCompletedEventHandler(object sender, getUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getEndActionCompletedEventHandler(object sender, getEndActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEndActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEndActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAtachmentsListCompletedEventHandler(object sender, getAtachmentsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAtachmentsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAtachmentsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void deleteAtachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getActionListCompletedEventHandler(object sender, getActionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet loadData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591